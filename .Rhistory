p <- ggplot(data=unsubscribe,mapping=aes(x=date,y=activeuser))
p + geom_point()
p <- ggplot(data=unsubscribe,mapping=aes(x=date,y=unsubscribe))
p + geom_point()
user <- data.frame(subscribe$date,subscribe$subscribe)
user
user <- as.data.frame(subscribe)
user
user$unsubscribe <- unsubscribe
user
user$unsubscribe <- unsubscribe$unsubscribe
user
userincrease <- subscribe$subscribe -unsubscribe$unsubscribe
user$userincrease <-userincrease
user
qplot(unsubscribe$date,unsubscribe$unsubscribe)
p <- ggplot(data=unsubscribe,mapping=aes(x=date,y=unsubscribe))
p + geom_point()
usertotal <- cumsum(userincrease) + userbase;
user$usertotal <-usertotal
user
summary(user)
plot(fund$date, fund$profit,type='b')
fund.profit <- scale(fund$profit)
fund.profit
plot(fund.profit)
user <- as.data.frame(subscribe,row.names=date)
user
user <- as.data.frame(subscribe)
qplot(unsubscribe$date,unsubscribe$unsubscribe)
p <- ggplot(data=unsubscribe,mapping=aes(x=date,y=unsubscribe))
p + geom_point()
p + geom_point()+stat_smooth()
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe))+
stat_smooth(data=subscribe,mapping=aes(x=date,y=subscribe))
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe))+
stat_smooth(data=subscribe,mapping=aes(x=date,y=subscribe))
print(p)
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe))+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe))
print(p)
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colours(T))+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe))
print(p)
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colours(T))+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe)colours(T))
print(p)
?geom_point
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colour = "green")+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe),colour = "red")
print(p)
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colour = "green")+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe),colour = "red")+
geom_point(coord_cartesian(ylim=c(0,120))
print(p)
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colour = "green")+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe),colour = "red")+
geom_point(coord_cartesian(ylim=c(0,120))
print(p)
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colour = "green")+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe),colour = "red")+
geom_point(coord_cartesian(ylim=c(0,120)))
print(p)
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colour = "green")+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe),colour = "red")+
aes(coord_cartesian(ylim=c(0,120)))
print(p)
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colour = "green")+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe),colour = "red")
print(p)
p <- ggplot( aes(coord_cartesian(ylim=c(0,120))))+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colour = "green")+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe),colour = "red")
print(p)
？aes
?aes
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colour = "green")+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe),colour = "red")
print(p)
#fund
fund <- sqlQuery(conn,"select date,profit,rate FROM fund order by updatetime asc")
fund
plot(fund$date, fund$profit,type='b')
boxplot(fund$profit)
fund.profit <- scale(fund$profit)
fund.profit <- scale(fund$profit)
fund.profit
plot(fund.profit)
p <- ggplot()+
geom_point(data=profit,mapping=aes(x=date,y=profit),colour = "green")+
geom_point(data=rate,mapping=aes(x=date,y=rate),colour = "red")
print(p)
p <- ggplot()+
geom_point(data=profit,mapping=aes(x=date,y=profit),colour = "green")+
geom_point(data=rate,mapping=aes(x=date,y=rate),colour = "red")
print(p)
p <- ggplot()+
geom_point(data=fund,mapping=aes(x=date,y=profit),colour = "green")+
geom_point(data=fund,mapping=aes(x=date,y=rate),colour = "red")
print(p)
p <- ggplot()+
geom_abline(data=fund,mapping=aes(x=date,y=profit),colour = "green")+
geom_abline(data=fund,mapping=aes(x=date,y=rate),colour = "red")
print(p)
p <- ggplot()+
geom_pointrange(data=fund,mapping=aes(x=date,y=profit),colour = "green")+
geom_pointrange(data=fund,mapping=aes(x=date,y=rate),colour = "red")
print(p)
p <- ggplot()+
geom_density(data=fund,mapping=aes(x=date,y=profit),colour = "green")+
geom_density(data=fund,mapping=aes(x=date,y=rate),colour = "red")
print(p)
p <- ggplot()+
geom_point(data=fund,mapping=aes(x=date,y=profit),colour = "green")+
geom_point(data=fund,mapping=aes(x=date,y=rate),colour = "red")
print(p)
p <- ggplot()+
geom_point(data=fund,mapping=aes(x=date,y=profit),colour = "green")
print(p)
p <- ggplot()+
geom_boxplot(data=fund,mapping=aes(x=date,y=profit),colour = "green")
print(p)
message <- sqlQuery(conn,'SELECT DATE(msgtime) as date ,COUNT(*) as messagenum
FROM message GROUP BY DATE(msgtime)')
message
library(ggplot2)
mtcars$cylinder <- as.factor(mtcars$cyl)
library(ggplot2)
mtcars$cylinder <- as.factor(mtcars$cyl)
qplot(cylinder, mpg, data=mtcars, geom=c("boxplot", "jitter"),
fill=cylinder,
main="Box plots with superimposed data points",
xlab= "Number of Cylinders",
ylab="Miles per Gallon")
library(ggplot2)
transmission <- factor(mtcars$am, levels = c(0, 1),
labels = c("Automatic", "Manual"))
qplot(wt, mpg, data = mtcars,
color = transmission, shape = transmission,
geom = c("point", "smooth"),
method = "lm", formula = y ~ x,
xlab = "Weight",  ylab = "Miles Per Gallon",
main = "Regression Example")
library(ggplot2)
mtcars$cyl <- factor(mtcars$cyl, levels = c(4, 6, 8),
labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
mtcars$am <- factor(mtcars$am, levels = c(0, 1),
labels = c("Automatic", "Manual"))
qplot(wt, mpg, data = mtcars, facets = am ~ cyl, size = hp)
library(ggplot2)
data(singer, package = "lattice")
qplot(height, data = singer, geom = c("density"),
facets = voice.part ~ ., fill = voice.part)
install.packages(TSA)
install.packages(“TSA”)
install.packages("TSA")
win.graph(width=4.875, height=2.5,pointsize=8)
data(larain)
plot(larain,ylab='Inches',xlab='Year',type='o')
larain <- read.table("D:/DEV/WorkSpaces/Programming-R/TimeSeriesAnalysiswithApplicationsinR/Datasets/larain.dat", header=T, quote="\"")
View(larain)
win.graph(width=4.875, height=2.5,pointsize=8)
data(larain)
plot(larain,ylab='Inches',xlab='Year',type='o')
win.graph(width=4.875, height=2.5,pointsize=8)
data(larain)
load("D:/DEV/WorkSpaces/Programming-R/TimeSeriesAnalysiswithApplicationsinR/Datasets/larain.dat")
View(larain)
data(larain)
plot(larain,ylab='Inches',xlab='Year',type='o')
plot(larain,ylab='Inches',xlab='Year')
message <- sqlQuery(conn,'SELECT * FROM message')
head(message)
message <- sqlQuery(conn,'SELECT * FROM message')
head(message)
library(RODBC)
detach('packages:RODBC')
conn <- odbcConnect('mysql_data')
library(RODBC)
conn <- odbcConnect('mysql_data')
message <- sqlQuery(conn,'SELECT * FROM message')
head(message)
View(message)
p <- ggplot()+
geom_point(data=subscribe,mapping=aes(x=date,y=subscribe),colour = "green")+
geom_point(data=unsubscribe,mapping=aes(x=date,y=unsubscribe),colour = "red")
print(p)
source('D:/DEV/WorkSpaces/Programming-R/code/ggplotdemo.R')
library(ggplot2)
data(singer, package = "lattice")
qplot(height, data = singer, geom = c("density"),
facets = voice.part ~ ., fill = voice.part)
qplot(height, data = message, geom = c("density"),
facets = message.type ~ ., fill = message.type)
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("ALL")
ALL
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("ALL")
library(Biobase)
library(ALL)
data(ALL)
ALL
pD <- phenoData(ALL)
varMetadata(pD)
table(ALL$BT)
table(ALL$mol.biol)
table(ALL$BT,ALL$mol.bio)
featureNames(ALL)[1:10]
sampleNames(ALL)[1:5]
tgt.cases <- which(ALL$BT %in% levels(ALL$BT)[1:5] &
ALL$mol.bio %in% levels(ALL$mol.bio)[1:4])
ALLb <- ALL[,tgt.cases]
ALLb
ALLb$BT <- factor(ALLb$BT)
ALLb$mol.bio <- factor(ALLb$mol.bio)
save(ALLb,file="myALL.Rdata")
setwd("D:/DEV/WorkSpaces/Programming-R")
save(ALLb,file="myALL.Rdata")
es <- exprs(ALLb)
dim(es)
summary(as.vector(es))
source("http://bioconductor.org/biocLite.R")
biocLite("genefilter")
library(genefilter)
biocLite("genefilter")
library(genefilter)
hist(as.vector(es),breaks=80,prob=T,
xlab='Expression Levels',
main='Histogram of Overall Expression Levels')
abline(v=c(median(as.vector(es)),
shorth(as.vector(es)),
quantile(as.vector(es),c(0.25,0.75))),
lty=2,col=c(2,3,4,4))
legend('topright',c('Median','Shorth','1stQ','3rdQ'),
lty=2,col=c(2,3,4,4))
abline(v=c(median(as.vector(es)),
shorth(as.vector(es)),
quantile(as.vector(es),c(0.25,0.75))),
lty=2,col=c(2,3,4,4))
rowIQRs <- function(em)
rowQ(em,ceiling(0.75*ncol(em))) - rowQ(em,floor(0.25*ncol(em)))
plot(rowMedians(es),rowIQRs(es),
xlab='Median expression level',
ylab='IQR expression level',
main='Main Characteristics of Genes Expression Levels')
ALLb <- nsFilter(ALLb,
var.func=IQR,
var.cutoff=IQR(as.vector(es))/5,
feature.exclude="^AFFX")
ALLb
ALLb <- ALLb$eset
es <- exprs(ALLb)
dim(es)
f <- Anova(ALLb$mol.bio,p=0.01)
ff <- filterfun(f)
selGenes <- genefilter(exprs(ALLb),ff)
ALLb <- ALLb$eset
es <- exprs(ALLb)
dim(es)
library(genefilter)
ALLb <- nsFilter(ALLb,
var.func=IQR,
var.cutoff=IQR(as.vector(es))/5,
feature.exclude="^AFFX")
ALLb
biocLite("genefilter")
ALLb <- nsFilter(ALLb,
var.func=IQR,
var.cutoff=IQR(as.vector(es))/5,
feature.exclude="^AFFX")
ALLb
library(genefilter)
ALLb <- nsFilter(ALLb,
var.func=IQR,
var.cutoff=IQR(as.vector(es))/5,
feature.exclude="^AFFX")
ALLb
library(genefilter)
source("http://bioconductor.org/biocLite.R")
biocLite("genefilter")
ALLb <- nsFilter(ALLb,
var.func=IQR,
var.cutoff=IQR(as.vector(es))/5,
feature.exclude="^AFFX")
ALLb
data(iris)
rpart.loocv <- function(form,train,test,...) {
require(rpart,quietly=T)
m <- rpart(form,train,...)
p <- predict(m,test,type='class')
c(accuracy=ifelse(p == resp(form,test),100,0))
}
exp <- loocv(learner('rpart.loocv',list()),
dataset(Species~.,iris),
loocvSettings(seed=1234,verbose=F))
exp <- loocv(learner('rpart.loocv',list()),
dataset(Species~.,iris),
loocvSettings(seed=1234,verbose=F))
summary(exp)
set.seed(1410) # Make the sample reproducible
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
qplot(carat, price, data = diamonds)
qplot(log(carat), log(price), data = diamonds)
qplot(carat, x * y * z, data = diamonds)
qplot(carat, price, data = dsmall, colour = color)
qplot(carat, price, data = dsmall, shape = cut)
qplot(carat, price, data = diamonds, alpha = I(1/10))
qplot(carat, price, data = diamonds, alpha = I(1/100))
qplot(carat, price, data = diamonds, alpha = I(1/200))
qplot(carat, price, data = dsmall, geom = c("point", "smooth"))
qplot(carat, price, data = diamonds, geom = c("point", "smooth"))
qplot(carat, price, data = diamonds, geom = c("point", "smooth")，se=F)
qplot(carat, price, data = diamonds, geom = c("point", "smooth")，se=FALSE)
qplot(carat, price, data = diamonds, geom = c("point", "smooth"),se=FALSE)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),
span = 0.2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),
span = 1)
library(mgcv)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),
method = "gam", formula = y ~ s(x))
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),
method = "gam", formula = y ~ s(x, bs = "cs"))
library(splines)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),
method = "lm")
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),
method = "lm", formula = y ~ ns(x,5))
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),
method = "lm", formula = y ~ ns(x,2))
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),
method = "lm", formula = y ~ ns(x,15))
qplot(color, price / carat, data = diamonds, geom = "jitter")
head(diamonds)
qplot(color, price / carat, data = diamonds, geom = "boxplot")
qplot(color, price / carat, data = diamonds, geom = "jitter",
alpha = I(1 / 5))
qplot(color, price / carat, data = diamonds, geom = "jitter",
alpha = I(1 / 50))
qplot(color, price / carat, data = diamonds, geom = "jitter",
alpha = I(1 / 200))
qplot(color, price / carat, data = diamonds, geom = "jitter",colours=colors,
alpha = I(1 / 50))
qplot(color, price / carat, data = diamonds, geom = "jitter",colour=color,
alpha = I(1 / 50))
qplot(carat, data = diamonds, geom = "histogram")
qplot(carat, data = diamonds, geom = "density")
qplot(carat, data = diamonds, geom = "histogram", binwidth = 1,
xlim = c(0,3))
qplot(carat, data = diamonds, geom = "histogram", binwidth = 0.1,
xlim = c(0,3))
qplot(carat, data = diamonds, geom = "histogram", binwidth = 0.01,
xlim = c(0,3))
qplot(carat, data = diamonds, geom = "density", colour = color)
qplot(carat, data = diamonds, geom = "histogram", fill = color)
qplot(color, data = diamonds, geom = "bar")
qplot(color, data = diamonds, geom = "bar")
qplot(color, data = diamonds, geom = "bar", weight = carat) +
scale_y_continuous("carat")
qplot(color, data = diamonds, geom = "bar")
qplot(color, data = diamonds, geom = "bar", weight = carat) +
scale_y_continuous("carat")
qplot(date, unemploy / pop, data = economics, geom = "line")
qplot(date, uempmed, data = economics, geom = "line"
qplot(date, uempmed, data = economics, geom = "line")
qplot(date, unemploy / pop, data = economics, geom = "line")
qplot(date, uempmed, data = economics, geom = "line")
year <- function(x) as.POSIXlt(x)$year + 1900
year
qplot(unemploy / pop, uempmed, data = economics,
geom = c("point", "path"))
qplot(unemploy / pop, uempmed, data = economics,
geom = "path", colour = year(date)) + scale_area()
qplot(unemploy / pop, uempmed, data = economics,
geom = "path", colour = year(date))
qplot(unemploy / pop, uempmed, data = economics,
geom = "path", colour = year(date)) + scale_area()
qplot(unemploy / pop, uempmed, data = economics,
geom = "path", colour = year(date))
qplot(unemploy / pop, uempmed, data = economics,
geom = "path", colour = year(date)) + scale_area()
qplot(unemploy / pop, uempmed, data = economics,
geom = "path", colour = year(date))
qplot(unemploy / pop, uempmed, data = economics,
geom = "path", colour = year(date)) + scale_area()
qplot(unemploy / pop, uempmed, data = economics,
geom = "path", colour = year(date)) + scale_size_area()
qplot(carat, data = diamonds, facets = color ~ .,
geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
qplot(carat, ..density.., data = diamonds, facets = color ~ .,
geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
qplot(carat, data = diamonds, facets = color ~ .,
geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
qplot(
carat, price, data = dsmall,
xlab = "Price ($)", ylab = "Weight (carats)",
main = "Price-weight relationship"
)
qplot(
carat, price/carat, data = dsmall,
ylab = expression(frac(price,carat)),
xlab = "Weight (carats)",
main="Small diamonds",
xlim = c(.2,1)
)
qplot(carat, price, data = dsmall, log = "xy")
qplot(displ, hwy, data = mpg, colour = factor(cyl))
qplot(displ, hwy, data=mpg, colour=factor(cyl), geom="line") +
opts(drop = "legend_box")
qplot(displ, hwy, data=mpg, colour=factor(cyl), geom="bar",
stat="identity", position = "identity") +
opts(drop = "legend_box")
qplot(displ, hwy, data=mpg, colour=factor(cyl), geom="line") +
theme(drop = "legend_box")
qplot(displ, hwy, data=mpg, colour=factor(cyl), geom="bar",
stat="identity", position = "identity") +
theme(drop = "legend_box")
？theme
?theme
qplot(displ, hwy, data=mpg, colour=factor(cyl)) +
geom_smooth(data= subset(mpg, cyl != 5), method="lm")
qplot(displ, hwy, data=mpg, colour=factor(cyl)) +
geom_smooth(data= subset(mpg, cyl != 5), method="lm")
qplot(displ, hwy, data=mpg, facets = . ~ year) + geom_smooth()
load("plot.rdata")
p <- qplot(displ, hwy, data = mpg, colour = factor(cyl))
summary(p)
p <- ggplot(diamonds, aes(carat, price, colour = cut))
p <- p + layer(geom = "point")
layer(geom, geom_params, stat, stat_params, data, mapping,
position)
p <- ggplot(diamonds, aes(carat, price, colour = cut))
p <- p + layer(geom = "point")
p
p <- ggplot(diamonds, aes(carat, price, colour = cut))
p
p <- p + layer(geom = "point")
p
p <- ggplot(diamonds, aes(x = carat))
p <- p + layer(
geom = "bar",
geom_params = list(fill = "steelblue"),
stat = "bin",
stat_params = list(binwidth = 2)
)
p
ggplot(msleep, aes(sleep_rem / sleep_total, awake)) +
geom_point()
qplot(sleep_rem / sleep_total, awake, data = msleep)
qplot(sleep_rem / sleep_total, awake, data = msleep,
geom = c("point", "smooth"))
p <- ggplot(msleep, aes(sleep_rem / sleep_total, awake))
summary(p)
p <- p + geom_point()
summary(p)
p
bestfit <- geom_smooth(method = "lm", se = F,
colour = alpha("steelblue", 0.5), size = 2)
bestfit <- geom_smooth(method = "lm", se = F,
colour = alpha("steelblue", 0.5), size = 2)
qplot(sleep_rem, sleep_total, data = msleep) + bestfit
p <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point()
p
mtcars <- transform(mtcars, mpg = mpg ^ 2)
p %+% mtcars
p <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point()
p
mtcars <- transform(mtcars, mpg = mpg ^ 2)
p %+% mtcars
p <- ggplot(mtcars)
summary(p)
p <- p + aes(wt, hp)
summary(p)
p <- ggplot(mtcars, aes(x = mpg, y = wt))
p + geom_point()
p + geom_point(aes(colour = factor(cyl)))
p + geom_point(aes(y = disp))
p
p <- ggplot(mtcars, aes(x = mpg, y = wt))
p + geom_point()
p <- ggplot(mtcars, aes(mpg, wt))
p + geom_point(colour = "darkblue")
qplot(mpg, wt, data=mtcars, colour = I("darkblue"))
qplot(mpg, wt, data=mtcars, colour = "darkblue")
qplot(mpg, wt, data=mtcars, colour = I("darkblue"))
p <- ggplot(Oxboys, aes(age, height, group = Subject)) +
geom_line()
dplot <- ggplot(diamonds, aes(clarity, fill = cut))
dplot + geom_bar(position = "stack")
dplot + geom_bar(position = "fill")
dplot + geom_bar(position = "dodge"
dplot + geom_bar(position = "dodge")
dplot + geom_bar(position = "identity")
qplot(clarity, data = diamonds, geom="line", colour = cut,
stat="bin", group=cut)
plot <- qplot(cty, hwy, data = mpg)
plot
