k <- k+1
}
}
return k
}
oddcount(c(1,3,5))
oddcount(c(1,3,5,6.345))
#counts number
oddcount <- function(x){
k <- 0 #init
for( i in x){
if(i%%2 == 1){
k <- k+1
}
}
return k
}
oddcount(c(1,3,5))
oddcount(c(1,3,5,6.345))
#counts number
oddcount <- function(x){
k <- 0 #init
for( i in x){
if(i%%2 == 1){
k <- k+1
}
}
return k
}
oddcount(c(1,3,5))
oddcount(c(1,3,5,6.345))
# TODO: Add comment
#
# Author: EASON
###############################################################################
prime<-function(n)
{
prime1<-function(x)
{
y<-TRUE
for(i in (x%/%2):2)
{
if(x%%i==0) y=FALSE
if(x==2 | x==3) y=TRUE
}
y
}
x<-c()
for (i in 2:n)
{
if(prime1(i)) x<-c(x,i)
if(i==n) return(x)
}
}
prime(100)
prime(1000)
mean(abs(rnorm(100)))
mean(rnorm(100))
rnorm(100)
#counts number
oddcount <- function(x){
k <- 0 #init
for( i in x){
if(i%%2 == 1){
k <- k+1
}
}
return k
}
oddcount(c(1,3,5))
oddcount(c(1,3,5,6.345))
oddcount <- function(x)  {
k <- 0  # assign 0 to k
for (n in x)  {
if (n %% 2 == 1) k <- k+1  # %% is the modulo operator
}
return(k)
}
oddcount(c(1,3,5))
oddcount(c(1,3,5,6.345))
#counts number
oddcount <- function(x){
k <- 0 #init
for( i in x){
if(i%%2 == 1){
k <- k+1
}
}
return (k)
}
oddcount(c(1,3,5))
oddcount(c(1,3,5,6.345))
hn <- hist(Nile)
print(hn)
# findud() converts vector v to 1s, 0s, representing an element
# increasing or not, relative to the previous one; output length is 1
# less than input
findud <- function(v) {
vud <- v[-1] - v[-length(v)]
return(ifelse(vud > 0,1,-1))
}
udcorr <- function(x,y) {
ud <- lapply(list(x,y),findud)
return(mean(ud[[1]] == ud[[2]]))
}
x
y
x<-c(5,12,13,3,6,0,1,15,16,8,88)
y<-c(4,2,3,23,6,10,11,12,6,3,2)
udcorr(x,y)
x<-c(5,12,13,3,6,0,1,15,16,8,88)
x<-c(5,12,13,3,6,0,1,15,16,8,88)
x
demo(graphics)
?ts
x <- data.frame(matrix ( 1:3 0,nrow = 5 , byrow = T) )
x <- data.frame(matrix (1:30,nrow = 5 , byrow = T) )
dim( x )
print ( x )
new.x1 <- x[-c ( 1, 4 ) , ] #row
new.x2 <- x[ -c [ 2 , 3 ] ] # c o l
new.x2 <- x[ ,-c [ 2 , 3 ] ] # c o l
new.x2 <- x[ ,-c[ 2 , 3] ] # c o l
new.x2 <- x[ ,-c[2,3]]
new.x2 <- x[,-c[2,3]]
new.x2 <- x[,-c[2,3]] # col
new.x1
new.x2 <- x[,-c(2,3)] # col
new.x2
x <- array ( 1:24 , 2:4 )
x
xt <- aperm(x , c ( 2 , 1 , 3 ) )
dim(x)
dim(xt)
x <- 1:1 0 ; y <- rev ( x )
x <- 1:10 ; y <- rev ( x )
pmax(x , y ) ; pmin (x , y )
y
n <- 17 ; fac <- factor ( rep ( 1:3 , len = n ) , levels = 1:5 )
fac
table(fac)
tapply(1:n,fac,sum)
tapply(1:n,fac,mean)
pnorm( 5 , 3 , 1 ) - pnorm( 2 , 3 , 1 )
year <- 1995:2005
year
sort ( rnorm( 11 , 1000 , 100 )
GDP = sort ( rnorm( 11 , 1000 , 100 )
GDP = sort ( rnorm( 11 , 1000 , 100 )
gdp
year <- 1995:2005
x1 <- data.frame ( year , GDP = sort ( rnorm( 11 , 1000 , 100 ) ) )
x2 <- data.frame ( year , UR = rnorm( 11 , 5 , 1 ) )
par (mar = c ( 5 , 4 , 4 , 6 )+0.1 )
plot ( x1 , axes = FALSE, type="l")
year <- 1995:2005
x1 <- data.frame ( year , GDP = sort ( rnorm( 11 , 1000 , 100 ) ) )
x2 <- data.frame ( year , UR = rnorm( 11 , 5 , 1 ) )
par (mar = c ( 5 , 4 , 4 , 6 )+0.1 )
plot ( x1 , axes = FALSE, type="l")
par (new = T, mar = c ( 10 , 4 , 10 , 6 ) + 0.1 )
plot ( x2 , axes = FALSE, xlab = "" , ylab = "" , col = "red" , type= "b")
mtext ("UR(%)" , 4 , 3 , col="red")
axis ( 4 , col ="red" , col . axis = "red")
n <- 100;
x <- cumsum(rnorm(100))
y <- cumsum(rnorm(100))
plot(x,y,type='l')
utils::example(lm)
step(lm.D9)
example(factanal)
utils::example(lm)
.packages(all.available =true)
.packages(all.available =TRUE)
x<-c(0.10, 0.11, 0.12, 0.13, 0.14, 0.15,
0.16, 0.17, 0.18, 0.20, 0.21, 0.23)
y<-c(42.0, 43.5, 45.0, 45.5, 45.0, 47.5,
49.0, 53.0, 50.0, 55.0, 55.0, 60.0)
lm.sol<-lm(y ~ 1+x)
summary(lm.sol)
plot(x,y)
X<-matrix(c(
194.5, 20.79, 1.3179, 131.79,
194.3, 20.79, 1.3179, 131.79,
197.9, 22.40, 1.3502, 135.02,
198.4, 22.67, 1.3555, 135.55,
199.4, 23.15, 1.3646, 136.46,
199.9, 23.35, 1.3683, 136.83,
200.9, 23.89, 1.3782, 137.82,
201.1, 23.99, 1.3800, 138.00,
201.4, 24.02, 1.3806, 138.06,
201.3, 24.01, 1.3805, 138.05,
203.6, 25.14, 1.4004, 140.04,
204.6, 26.57, 1.4244, 142.44,
209.5, 28.49, 1.4547, 145.47,
208.6, 27.76, 1.4434, 144.34,
210.7, 29.04, 1.4630, 146.30,
211.9, 29.88, 1.4754, 147.54,
212.2, 30.06, 1.4780, 147.80),
ncol=4, byrow=T,
dimnames = list(1:17, c("F", "h", "log", "log100")))
forbes<-data.frame(X)
plot(forbes$F, forbes$log100)
plot(forbes$F, forbes$log100)
lm.sol<-lm(log100~F, data=forbes)
summary(lm.sol)
abline(lm.sol)
y.res<-residuals(lm.sol);plot(y.res)
text(12,y.res[12], labels=12,adj=1.2)
i<-1:17; forbes12<-data.frame(X[i!=12, ])
lm12<-lm(log100~F, data=forbes12)
summary(lm12)
y.res<-residuals(lm.sol);plot(y.res)
text(12,y.res[12], labels=12,adj=1.2)
i<-1:17; forbes12<-data.frame(X[i!=12, ])
lm12<-lm(log100~F, data=forbes12)
summary(lm12)
X<-matrix(c(
194.5, 20.79, 1.3179, 131.79,
194.3, 20.79, 1.3179, 131.79,
197.9, 22.40, 1.3502, 135.02,
198.4, 22.67, 1.3555, 135.55,
199.4, 23.15, 1.3646, 136.46,
199.9, 23.35, 1.3683, 136.83,
200.9, 23.89, 1.3782, 137.82,
201.1, 23.99, 1.3800, 138.00,
201.4, 24.02, 1.3806, 138.06,
201.3, 24.01, 1.3805, 138.05,
203.6, 25.14, 1.4004, 140.04,
204.6, 26.57, 1.4244, 142.44,
209.5, 28.49, 1.4547, 145.47,
208.6, 27.76, 1.4434, 144.34,
210.7, 29.04, 1.4630, 146.30,
211.9, 29.88, 1.4754, 147.54,
212.2, 30.06, 1.4780, 147.80),
ncol=4, byrow=T,
dimnames = list(1:17, c("F", "h", "log", "log100")))
forbes<-data.frame(X)
plot(forbes$F, forbes$log100)
lm.sol<-lm(log100~F, data=forbes)
summary(lm.sol)
abline(lm.sol)
y.res<-residuals(lm.sol);plot(y.res)
text(12,y.res[12], labels=12,adj=1.2)
i<-1:17; forbes12<-data.frame(X[i!=12, ])
lm12<-lm(log100~F, data=forbes12)
summary(lm12)
blood<-data.frame(
X1=c(76.0, 91.5, 85.5, 82.5, 79.0, 80.5, 74.5,
79.0, 85.0, 76.5, 82.0, 95.0, 92.5),
X2=c(50, 20, 20, 30, 30, 50, 60, 50, 40, 55,
40, 40, 20),
Y= c(120, 141, 124, 126, 117, 125, 123, 125,
132, 123, 132, 155, 147)
)
lm.sol<-lm(Y ~ X1+X2, data=blood)
summary(lm.sol)
clear()
blood<-data.frame(
X1=c(76.0, 91.5, 85.5, 82.5, 79.0, 80.5, 74.5,
79.0, 85.0, 76.5, 82.0, 95.0, 92.5),
X2=c(50, 20, 20, 30, 30, 50, 60, 50, 40, 55,
40, 40, 20),
Y= c(120, 141, 124, 126, 117, 125, 123, 125,
132, 123, 132, 155, 147)
)
lm.sol<-lm(Y ~ X1+X2, data=blood)
summary(lm.sol)
y.res<-resid(lm.sol)
y.fit<-predict(lm.sol)
plot(y.res~y.fit)
y.rst<-rstandard(lm.sol)
plot(y.rst~y.fit)
toothpaste<-data.frame(
X1=c(-0.05, 0.25,0.60,0,   0.25,0.20, 0.15,0.05,-0.15, 0.15,
0.20, 0.10,0.40,0.45,0.35,0.30, 0.50,0.50, 0.40,-0.05,
-0.05,-0.10,0.20,0.10,0.50,0.60,-0.05,0,    0.05, 0.55),
X2=c( 5.50,6.75,7.25,5.50,7.00,6.50,6.75,5.25,5.25,6.00,
6.50,6.25,7.00,6.90,6.80,6.80,7.10,7.00,6.80,6.50,
6.25,6.00,6.50,7.00,6.80,6.80,6.50,5.75,5.80,6.80),
Y =c( 7.38,8.51,9.52,7.50,9.33,8.28,8.75,7.87,7.10,8.00,
7.89,8.15,9.10,8.86,8.90,8.87,9.26,9.00,8.75,7.95,
7.65,7.27,8.00,8.50,8.75,9.21,8.27,7.67,7.93,9.26)
)
lm.sol<-lm(Y~X1+X2,data=toothpaste)
summary(lm.sol)
attach(toothpaste)
plot(Y~X1); abline(lm(Y~X1))
lm2.sol<-lm(Y~X2+I(X2^2))
x<-seq(min(X2), max(X2), len=200)
y<-predict(lm2.sol, data.frame(X2=x))
plot(Y~X2); lines(x,y)
lm.new<-update(lm.sol, .~.+I(X2^2))
summary(lm.new)
source("beta.int.R")
source("beta.int.R")
source("beta.int.R")
source("beta.int.R")
lm2.new<-update(lm.new, .~.-X2)
summary(lm2.new)
lm3.new<-update(lm.new, .~.+X1*X2)
summary(lm3.new)
age <- c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4,
10.2, 6.1)
mean(weight)
sd(weight)
cor(age, weight)
plot(age, weight)
ls()
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
patientdata <- data.frame(patientID, age, diabetes,
status)
patientdata
patientdata[1:2]
patientdata[c("diabetes", "status")]
patientdata$age
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
diabetes <- factor(diabetes)
status <- factor(status, order = TRUE)
patientdata <- data.frame(patientID, age, diabetes,
status)
str(patientdata)
summary(patientdata)
summary(x)
help(read.table)
par(ask = TRUE)
attach(mtcars)
plot(wt, mpg)
title("Regression of MPG on Weight")
detach(mtcars)
dose <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type = "b")
opar <- par(no.readonly = TRUE)
par(lty = 2, pch = 17)
plot(dose, drugA, type = "b")
colour()
colors()
rainbow()
rainbow(10)
n <- 10
mycolors <- rainbow(n)
pie(rep(1, n), labels = mycolors, col = mycolors)
mygrays <- gray(0:n/n)
pie(rep(1, n), labels = mygrays, col = mygrays)
names(pdfFonts())
dose <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(pin = c(2, 3))
par(lwd = 2, cex = 1.5)
par(cex.axis = 0.75, font.axis = 3)
plot(dose, drugA, type = "b", pch = 19, lty = 2, col = "red")
bg = "green")
par(opar)
dose <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(pin = c(2, 3))
par(lwd = 2, cex = 1.5)
par(cex.axis = 0.75, font.axis = 3)
plot(dose, drugA, type = "b", pch = 19, lty = 2, col = "red")
plot(dose, drugB, type = "b", pch = 23, lty = 6, col = "blue",
bg = "green")
par(opar)
install.package('resharpe')
install.packages('resharpe')
Sys.Date()
date()
runif(5)
runif(5)
set.seed(1234)
runif(5)
set.seed(1234)
runif(5)
a <- 5
sqrt(a)
b <- c(1.243, 5.654, 2.99)
round(b)
c <- matrix(runif(12), nrow=3)
c
mean(c)
options(digits=2)
Student <- c("John Davis", "Angela Williams",
"Bullwinkle Moose", "David Jones",
"Janice Markhammer", "Cheryl Cushing",
"Reuven Ytzrhak", "Greg Knox", "Joel England",
"Mary Rayburn")
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Student, Math, Science, English,
stringsAsFactors=FALSE)
z <- scale(roster[,2:4])
score <- apply(z, 1, mean)
roster <- cbind(roster, score)
roster
z
y <- quantile(score, c(.8,.6,.4,.2))
y
cars <- mtcars[1:5, 1:4]
cars
mtcars
cars
t(cars)
attach(mtcars)
mtcars
aggdata <-aggregate(mtcars, by=list(cyl,gear),
FUN=mean, na.rm=TRUE)
aggdata
aggdata1 <-aggregate(mtcars, by=list(cyl),
FUN=mean, na.rm=TRUE)
aggdata1
install.packages(c('vcd', 'plotrix', 'sm', 'vioplot'))
par(ask = TRUE)
opar <- par(no.readonly = TRUE)
library(vcd)
install.packages("C:/Users/EASON/Desktop/vcd_1.3-1.zip", repos = NULL)
library(vcd)
install.packages('grid')
install.packages("grid")
library(vcd)
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
library(vcd)
counts <- table(Arthritis$Improved)
counts
barplot(counts, main = "Simple Bar Plot", xlab = "Improvement",
ylab = "Frequency")
# get counts for Improved by Treatment table
counts <- table(Arthritis$Improved, Arthritis$Treatment)
counts
barplot(counts, main = "Horizontal Bar Plot", xlab = "Frequency",
ylab = "Improvement", horiz = TRUE)
barplot(counts, main = "Horizontal Bar Plot", xlab = "Frequency",
ylab = "Improvement", horiz = TRUE)
barplot(counts, main = "Stacked Bar Plot", xlab = "Treatment",
ylab = "Frequency", col = c("red", "yellow", "green"),
legend = rownames(counts))
states <- data.frame(state.region, state.x77)
states
vars <- c("mpg", "hp", "wt")
head(mtcars[vars])
summary(mtcars[vars])
library(Hmisc)
describe(mtcars[vars])
install.packages(c('npmc', 'ggm', 'gmodels', 'vcd', 'Hmisc',       #
'pastecs', 'psych', 'doBy', 'reshape'))
install.packages(c("npmc", "ggm", "gmodels", "vcd", "Hmisc",
'pastecs', 'psych', 'doBy', 'reshape'))
library(Hmisc)
describe(mtcars[vars])
library(pastecs)
stat.desc(mtcars[vars])
library(vcd)
help(with())
with()
?with()
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
chisq.test(mytable)
mytable
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
mytable
Arthritis
Arthritis
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
mytable
mytable <- xtabs(~Improved+Sex, data=Arthritis)
mytable
states.x77
state.x77
cutoff <- 4/(nrow(states) - length(fit$coefficients) - 2)
plot(fit, which = 4, cook.levels = cutoff)
abline(h = cutoff, lty = 2, col = "red")
fit <- lm(Murder ~ Population + Illiteracy + Income +
Frost, data = states)
qqPlot(fit, labels = FALSE, simulate = TRUE, main = "Q-Q Plot")
package.install('cat')
packages.install('car')
package.install('car')
istall.pakeages('car')
install.pakeages('car')
install.packages('car')
fit <- lm(Murder ~ Population + Illiteracy + Income +
Frost, data = states)
fit <- lm(mpg ~ hp + wt + hp:wt, data = mtcars)
summary(fit)
library(car)
subsets(leaps, statistic = "cp",
main = "Cp Plot for All Subsets Regression")
abline(1, 1, lty = 2, col = "red")
hat.plot(fit)
hat.plot <- function(fit){
p <- length(coefficients(fit))
n <- length(fitted(fit))
plot(hatvalues(fit), main = "Index Plot of Hat Values")
abline(h = c(2, 3) * p/n, col = "red", lty = 2)
identify(1:n, hatvalues(fit), names(hatvalues(fit)))
}
hat.plot(fit)
