> #向量的赋值
> x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
> y <- c(x, 0, x)
> y
 [1] 10.4  5.6  3.1  6.4 21.7  0.0 10.4  5.6  3.1  6.4 21.7
> #向量的运算
> x <- c(-1, 0, 2); y <- c(3, 8, 2)
> v <- 2*x + y + 1; v
[1] 2 9 7
> x*y
[1] -3  0  4
> x^2
[1] 1 0 4
> y^x
[1] 0.3333333 1.0000000 4.0000000
> exp(x)#指数函数
[1] 0.3678794 1.0000000 7.3890561
> sqrt(y)  #平方根
[1] 1.732051 2.828427 1.414214
> #与向量有关的函数
> min(x)
[1] -1
> range(x)
[1] -1  2
> which.max(x)
[1] 3
> sum(x)#求和
[1] 1
> prod()#求联积
[1] 1
> x <- c(10, 6, 4, 7, 8)
> prod()#求联积
[1] 1
> length(x)
[1] 5
> sum(x)
[1] 35
> prod(x)
[1] 13440
> median(x)#中位数
[1] 7
> mean(x) #均值
[1] 7
> var(x)#方差
[1] 5
> sd(x)#标准差
[1] 2.236068
> sort(x)#排序
[1]  4  6  7  8 10
> 
> 
> 
> #产生有规律的序列
> #等差 a:b
> 2.312:6
[1] 2.312 3.312 4.312 5.312
> 2*1:15
 [1]  2  4  6  8 10 12 14 16 18 20 22 24 26 28 30
> 1:8-1
[1] 0 1 2 3 4 5 6 7
> #等间隔函数seq(from=value1, to= value2, by=value3)
> seq(-5, 5, by=.2) -> s1
> s1
 [1] -5.0 -4.8 -4.6 -4.4 -4.2 -4.0 -3.8 -3.6 -3.4 -3.2 -3.0 -2.8 -2.6 -2.4
[15] -2.2 -2.0 -1.8 -1.6 -1.4 -1.2 -1.0 -0.8 -0.6 -0.4 -0.2  0.0  0.2  0.4
[29]  0.6  0.8  1.0  1.2  1.4  1.6  1.8  2.0  2.2  2.4  2.6  2.8  3.0  3.2
[43]  3.4  3.6  3.8  4.0  4.2  4.4  4.6  4.8  5.0
> seq(2,10)
[1]  2  3  4  5  6  7  8  9 10
> #特殊用法
> s2 <- seq(length=51, from=-5, by=.2)
> s2
 [1] -5.0 -4.8 -4.6 -4.4 -4.2 -4.0 -3.8 -3.6 -3.4 -3.2 -3.0 -2.8 -2.6 -2.4
[15] -2.2 -2.0 -1.8 -1.6 -1.4 -1.2 -1.0 -0.8 -0.6 -0.4 -0.2  0.0  0.2  0.4
[29]  0.6  0.8  1.0  1.2  1.4  1.6  1.8  2.0  2.2  2.4  2.6  2.8  3.0  3.2
[43]  3.4  3.6  3.8  4.0  4.2  4.4  4.6  4.8  5.0
> #重复函数
> #重复函数 rep(x, times=3)
> x <- c(1, 4, 6.25); x
[1] 1.00 4.00 6.25
> s<-rep(x,times=3);s
[1] 1.00 4.00 6.25 1.00 4.00 6.25 1.00 4.00 6.25
> ##逻辑向量 TRUE FALSE
> x <- 1:7
> l <- x > 3
> l
[1] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
> #缺失数据 NA
> z <- c(1:3, NA); z
[1]  1  2  3 NA
> #is.na() 
> ind <- is.na(z); ind
[1] FALSE FALSE FALSE  TRUE
> #将NA改为0
> z[is.na(z)] <- 0; z
[1] 1 2 3 0
> #is.nan() 是否不确定
> #is.finite()是否有限
> #is.infinite()是否无限
> x<-c(0/1, 0/0, 1/0, NA); x
[1]   0 NaN Inf  NA
> is.nan(x)
[1] FALSE  TRUE FALSE FALSE
> is.finite(x)
[1]  TRUE FALSE FALSE FALSE
> is.infinite(x)
[1] FALSE FALSE  TRUE FALSE
> #字符型向量
> c("er", "sdf", "eir", "jk", "dim") -> y
> y
[1] "er"  "sdf" "eir" "jk"  "dim"
> paste("My","Job")
[1] "My Job"
> labs<-paste("X", 1:6, sep = ""); labs
[1] "X1" "X2" "X3" "X4" "X5" "X6"
> paste("Today is", date())
[1] "Today is Wed Aug 21 00:34:13 2013"
> paste(c(’a’, ’b’), collapse=’.’)

> #复数向量
> 
> 
> #向量下标运算 []
> x <- c(1,4,7)
> x[2]
[1] 4
> (c(1, 3, 5) + 5)[2]
[1] 8
> x[2] <- 125;x
[1]   1 125   7
> x[c(1,3)] <- c(144, 169);x
[1] 144 125 169
> #逻辑向量
> x <- c(1,4,7)
> x<5
[1]  TRUE  TRUE FALSE
> x[x<5]
[1] 1 4
> v <- 10:20
> v[c(1,3,5,9)]
[1] 10 12 14 18
> v[1:5]
[1] 10 11 12 13 14
> v[c(1,2,3,2,1)]
[1] 10 11 12 11 10
> c("a","b","c")[rep(c(2,1,3), times=3)]
[1] "b" "a" "c" "b" "a" "c" "b" "a" "c"
> ages <- c(Li=33, Zhang=29, Liu=18)
> ages
   Li Zhang   Liu 
   33    29    18 
> ages['zhang']
Zhang 
   29 
> ages["Zhang"]
Zhang 
   29 
> fruit <- c(5, 10, 1, 20)
> names(fruit) <- c("orange", "banana", "apple", "peach")
> fruit
orange banana  apple  peach 
     5     10      1     20 
> 
